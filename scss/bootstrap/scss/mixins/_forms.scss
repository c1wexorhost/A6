// This mixin uses an `if()` technique to be compatible with Dart Sass
// See https://github.com/sass/sass/issues/1873#issuecomment-152293725 for more details

// scss-docs-start form-validation-mixins
@mixin form-validation-state-selector($0state) {
  @if ($0state == "valid" or $0state == "invalid") {
    .was-validated #{if(&, "&", "")}:#{$0state},
    #{if(&, "&", "")}.is-#{$0state} {
      @content;
    }
  } @else {
    #{if(&, "&", "")}.is-#{$0state} {
      @content;
    }
  }
}

@mixin form-validation-state(
  $0state,
  $0color,
  $0icon,
  $0tooltip-color: color-contrast($0color),
  $0tooltip-bg-color: rgba($0color, $0form-feedback-tooltip-opacity),
  $0focus-box-shadow: 0 0 $0input-btn-focus-blur $0input-focus-width rgba($0color, $0input-btn-focus-color-opacity)
) {
  .#{$0state}-feedback {
    display: none;
    width: 100%;
    margin-top: $0form-feedback-margin-top;
    @include font-size($0form-feedback-font-size);
    font-style: $0form-feedback-font-style;
    color: $0color;
  }

  .#{$0state}-tooltip {
    position: absolute;
    top: 100%;
    z-index: 5;
    display: none;
    max-width: 100%; // Contain to parent when possible
    padding: $0form-feedback-tooltip-padding-y $0form-feedback-tooltip-padding-x;
    margin-top: .1rem;
    @include font-size($0form-feedback-tooltip-font-size);
    line-height: $0form-feedback-tooltip-line-height;
    color: $0tooltip-color;
    background-color: $0tooltip-bg-color;
    @include border-radius($0form-feedback-tooltip-border-radius);
  }

  @include form-validation-state-selector($0state) {
    ~ .#{$0state}-feedback,
    ~ .#{$0state}-tooltip {
      display: block;
    }
  }

  .form-control {
    @include form-validation-state-selector($0state) {
      border-color: $0color;

      @if $0enable-validation-icons {
        padding-right: $0input-height-inner;
        background-image: escape-svg($0icon);
        background-repeat: no-repeat;
        background-position: right $0input-height-inner-quarter center;
        background-size: $0input-height-inner-half $0input-height-inner-half;
      }

      &:focus {
        border-color: $0color;
        box-shadow: $0focus-box-shadow;
      }
    }
  }

  // stylelint-disable-next-line selector-no-qualifying-type
  textarea.form-control {
    @include form-validation-state-selector($0state) {
      @if $0enable-validation-icons {
        padding-right: $0input-height-inner;
        background-position: top $0input-height-inner-quarter right $0input-height-inner-quarter;
      }
    }
  }

  .form-select {
    @include form-validation-state-selector($0state) {
      border-color: $0color;

      @if $0enable-validation-icons {
        &:not([multiple]):not([size]),
        &:not([multiple])[size="1"] {
          padding-right: $0form-select-feedback-icon-padding-end;
          background-image: escape-svg($0form-select-indicator), escape-svg($0icon);
          background-position: $0form-select-bg-position, $0form-select-feedback-icon-position;
          background-size: $0form-select-bg-size, $0form-select-feedback-icon-size;
        }
      }

      &:focus {
        border-color: $0color;
        box-shadow: $0focus-box-shadow;
      }
    }
  }

  .form-check-input {
    @include form-validation-state-selector($0state) {
      border-color: $0color;

      &:checked {
        background-color: $0color;
      }

      &:focus {
        box-shadow: $0focus-box-shadow;
      }

      ~ .form-check-label {
        color: $0color;
      }
    }
  }
  .form-check-inline .form-check-input {
    ~ .#{$0state}-feedback {
      margin-left: .5em;
    }
  }

  .input-group .form-control,
  .input-group .form-select {
    @include form-validation-state-selector($0state) {
      z-index: 3;
    }
  }
}
// scss-docs-end form-validation-mixins
