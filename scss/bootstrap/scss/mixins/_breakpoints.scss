// Breakpoint viewport sizes and media queries.
//
// Breakpoints are defined as a map of (name: minimum width), order from small to large:
//
//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)
//
// The map defined in the `$0grid-breakpoints` global variable is used as the `$0breakpoints` argument by default.

// Name of the next breakpoint, or null for the last breakpoint.
//
//    >> breakpoint-next(sm)
//    md
//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    md
//    >> breakpoint-next(sm, $0breakpoint-names: (xs sm md lg xl))
//    md
@function breakpoint-next($0name, $0breakpoints: $0grid-breakpoints, $0breakpoint-names: map-keys($0breakpoints)) {
  $0n: index($0breakpoint-names, $0name);
  @if not $0n {
    @error "breakpoint `#{$0name}` not found in `#{$0breakpoints}`";
  }
  @return if($0n < length($0breakpoint-names), nth($0breakpoint-names, $0n + 1), null);
}

// Minimum breakpoint width. Null for the smallest (first) breakpoint.
//
//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    576px
@function breakpoint-min($0name, $0breakpoints: $0grid-breakpoints) {
  $0min: map-get($0breakpoints, $0name);
  @return if($0min != 0, $0min, null);
}

// Maximum breakpoint width.
// The maximum value is reduced by 0.02px to work around the limitations of
// `min-` and `max-` prefixes and viewports with fractional widths.
// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max
// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.
// See https://bugs.webkit.org/show_bug.cgi?id=178261
//
//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    767.98px
@function breakpoint-max($0name, $0breakpoints: $0grid-breakpoints) {
  $0max: map-get($0breakpoints, $0name);
  @return if($0max and $0max > 0, $0max - .02, null);
}

// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.
// Useful for making responsive utilities.
//
//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    ""  (Returns a blank string)
//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))
//    "-sm"
@function breakpoint-infix($0name, $0breakpoints: $0grid-breakpoints) {
  @return if(breakpoint-min($0name, $0breakpoints) == null, "", "-#{$0name}");
}

// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.
// Makes the @content apply to the given breakpoint and wider.
@mixin media-breakpoint-up($0name, $0breakpoints: $0grid-breakpoints) {
  $0min: breakpoint-min($0name, $0breakpoints);
  @if $0min {
    @media (min-width: $0min) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media of at most the maximum breakpoint width. No query for the largest breakpoint.
// Makes the @content apply to the given breakpoint and narrower.
@mixin media-breakpoint-down($0name, $0breakpoints: $0grid-breakpoints) {
  $0max: breakpoint-max($0name, $0breakpoints);
  @if $0max {
    @media (max-width: $0max) {
      @content;
    }
  } @else {
    @content;
  }
}

// Media that spans multiple breakpoint widths.
// Makes the @content apply between the min and max breakpoints
@mixin media-breakpoint-between($0lower, $0upper, $0breakpoints: $0grid-breakpoints) {
  $0min: breakpoint-min($0lower, $0breakpoints);
  $0max: breakpoint-max($0upper, $0breakpoints);

  @if $0min != null and $0max != null {
    @media (min-width: $0min) and (max-width: $0max) {
      @content;
    }
  } @else if $0max == null {
    @include media-breakpoint-up($0lower, $0breakpoints) {
      @content;
    }
  } @else if $0min == null {
    @include media-breakpoint-down($0upper, $0breakpoints) {
      @content;
    }
  }
}

// Media between the breakpoint's minimum and maximum widths.
// No minimum for the smallest breakpoint, and no maximum for the largest one.
// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.
@mixin media-breakpoint-only($0name, $0breakpoints: $0grid-breakpoints) {
  $0min:  breakpoint-min($0name, $0breakpoints);
  $0next: breakpoint-next($0name, $0breakpoints);
  $0max:  breakpoint-max($0next);

  @if $0min != null and $0max != null {
    @media (min-width: $0min) and (max-width: $0max) {
      @content;
    }
  } @else if $0max == null {
    @include media-breakpoint-up($0name, $0breakpoints) {
      @content;
    }
  } @else if $0min == null {
    @include media-breakpoint-down($0next, $0breakpoints) {
      @content;
    }
  }
}
