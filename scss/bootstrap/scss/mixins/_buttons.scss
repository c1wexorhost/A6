// Button variants
//
// Easily pump out default styles, as well as :hover, :focus, :active,
// and disabled options for all buttons

// scss-docs-start btn-variant-mixin
@mixin button-variant(
  $0background,
  $0border,
  $0color: color-contrast($0background),
  $0hover-background: if($0color == $0color-contrast-light, shade-color($0background, $0btn-hover-bg-shade-amount), tint-color($0background, $0btn-hover-bg-tint-amount)),
  $0hover-border: if($0color == $0color-contrast-light, shade-color($0border, $0btn-hover-border-shade-amount), tint-color($0border, $0btn-hover-border-tint-amount)),
  $0hover-color: color-contrast($0hover-background),
  $0active-background: if($0color == $0color-contrast-light, shade-color($0background,$0btn-active-bg-shade-amount), tint-color($0background, $0btn-active-bg-tint-amount)),
  $0active-border: if($0color == $0color-contrast-light, shade-color($0border, $0btn-active-border-shade-amount), tint-color($0border, $0btn-active-border-tint-amount)),
  $0active-color: color-contrast($0active-background),
  $0disabled-background: $0background,
  $0disabled-border: $0border,
  $0disabled-color: color-contrast($0disabled-background)
) {
  color: $0color;
  @include gradient-bg($0background);
  border-color: $0border;
  @include box-shadow($0btn-box-shadow);

  &:hover {
    color: $0hover-color;
    @include gradient-bg($0hover-background);
    border-color: $0hover-border;
  }

  .btn-check:focus + &,
  &:focus {
    color: $0hover-color;
    @include gradient-bg($0hover-background);
    border-color: $0hover-border;
    @if $0enable-shadows {
      @include box-shadow($0btn-box-shadow, 0 0 0 $0btn-focus-width rgba(mix($0color, $0border, 15%), .5));
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: 0 0 0 $0btn-focus-width rgba(mix($0color, $0border, 15%), .5);
    }
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:active,
  &.active,
  .show > &.dropdown-toggle {
    color: $0active-color;
    background-color: $0active-background;
    // Remove CSS gradients if they're enabled
    background-image: if($0enable-gradients, none, null);
    border-color: $0active-border;

    &:focus {
      @if $0enable-shadows {
        @include box-shadow($0btn-active-box-shadow, 0 0 0 $0btn-focus-width rgba(mix($0color, $0border, 15%), .5));
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: 0 0 0 $0btn-focus-width rgba(mix($0color, $0border, 15%), .5);
      }
    }
  }

  &:disabled,
  &.disabled {
    color: $0disabled-color;
    background-color: $0disabled-background;
    // Remove CSS gradients if they're enabled
    background-image: if($0enable-gradients, none, null);
    border-color: $0disabled-border;
  }
}
// scss-docs-end btn-variant-mixin

// scss-docs-start btn-outline-variant-mixin
@mixin button-outline-variant(
  $0color,
  $0color-hover: color-contrast($0color),
  $0active-background: $0color,
  $0active-border: $0color,
  $0active-color: color-contrast($0active-background)
) {
  color: $0color;
  border-color: $0color;

  &:hover {
    color: $0color-hover;
    background-color: $0active-background;
    border-color: $0active-border;
  }

  .btn-check:focus + &,
  &:focus {
    box-shadow: 0 0 0 $0btn-focus-width rgba($0color, .5);
  }

  .btn-check:checked + &,
  .btn-check:active + &,
  &:active,
  &.active,
  &.dropdown-toggle.show {
    color: $0active-color;
    background-color: $0active-background;
    border-color: $0active-border;

    &:focus {
      @if $0enable-shadows {
        @include box-shadow($0btn-active-box-shadow, 0 0 0 $0btn-focus-width rgba($0color, .5));
      } @else {
        // Avoid using mixin so we can pass custom focus shadow properly
        box-shadow: 0 0 0 $0btn-focus-width rgba($0color, .5);
      }
    }
  }

  &:disabled,
  &.disabled {
    color: $0color;
    background-color: transparent;
  }
}
// scss-docs-end btn-outline-variant-mixin

// scss-docs-start btn-size-mixin
@mixin button-size($0padding-y, $0padding-x, $0font-size, $0border-radius) {
  padding: $0padding-y $0padding-x;
  @include font-size($0font-size);
  // Manually declare to provide an override to the browser default
  @include border-radius($0border-radius, 0);
}
// scss-docs-end btn-size-mixin
